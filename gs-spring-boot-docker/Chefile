workspace.commands[0].type="mvn"
workspace.commands[0].name="build"
workspace.commands[0].commandLine="mvn clean install -f ${current.project.path}"
workspace.commands[1].type="mvn"
workspace.commands[1].name="gs-spring-boot-docker: build"
workspace.commands[1].commandLine="mvn -f /projects/gs-spring-boot-docker clean install && cp /projects/web-java-spring/target/*.war $TOMCAT_HOME/webapps/ROOT.war"
workspace.commands[2].type="custom"
workspace.commands[2].name="gs-spring-boot-docker: run tomcat"
workspace.commands[2].commandLine="$TOMCAT_HOME/bin/catalina.sh run 2>&1"
workspace.commands[2].attributes.previewUrl="http://${server.port.8080}"
workspace.commands[3].type="custom"
workspace.commands[3].name="gs-spring-boot-docker: stop tomcat"
workspace.commands[3].commandLine="$TOMCAT_HOME/bin/catalina.sh stop"
workspace.commands[4].type="mvn"
workspace.commands[4].name="gs-spring-boot-docker: build and run"
workspace.commands[4].commandLine="mvn -f /projects/web-java-spring clean install && cp /projects/web-java-spring/target/*.war $TOMCAT_HOME/webapps/ROOT.war && $TOMCAT_HOME/bin/catalina.sh run 2>&1"
workspace.commands[4].attributes.previewUrl="http://${server.port.8080}"
workspace.commands[5].type="mvn"
workspace.commands[5].name="gs-spring-boot-docker: debug"
workspace.commands[5].commandLine="mvn -f /projects/gs-spring-boot-docker clean install && cp /projects/web-java-spring/target/*.war $TOMCAT_HOME/webapps/ROOT.war && $TOMCAT_HOME/bin/catalina.sh jpda run 2>&1"
workspace.commands[5].attributes.previewUrl="http://${server.port.8080}"
workspace.projects[0].name = "gs-spring-boot-docker"
workspace.projects[0].source.type = "git"
workspace.projects[0].source.location = "https://github.com/DevEnvy-HackWithFriends/java_springboot.git"
workspace.projects[0].type = "maven"
workspace.runtime.docker.image="eclipse/ubuntu_jdk8"
workspace.name="gs-spring-boot-docker"
workspace.ram=2048